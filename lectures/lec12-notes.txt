-------------------------------------------------------------------------------
Arch understanding demo
-------------------------------------------------------------------------------
- What the hell is a warp?
- Why is the size of the register file given in kiB?

- mem bw
  bus bits * bus clock /1e3 / 8

-  flops per core, per clock
  fpus * 2

- flop rate [gflops]
  cores * core clock * fpus * 2 * 1e6 / 1e9

- how many scheduling slots per core?
  warp size * (# warps/core)

- how many scheduling slots total?
  * cores
  -> and that's just what the hardware does!

- how much register file per work item?
  -> "I'm going to make a mistake."
  reg file * 1024 / # fpus

  correct:
  reg file * 1024 / # work items

- smem bw / WHAT?
  -> FLOP!

  lmem bw / (#fpus * 2)

- gmem bw / flop?

  (gmem bw *1e9) / (#cores) / (core clock *1e6) / (#fpus * 2)
-------------------------------------------------------------------------------
Occupancy calculator demo
-------------------------------------------------------------------------------
Use gnumeric
- grow work group size up to 256
- observe: occupancy increases
- then increase lmem to 16384
- observe: occupancy drops

- Is occupancy absolutely necessary?
  (No. ILP can be just as good. But you pay with space in the reg.file.)
-------------------------------------------------------------------------------
Gmem access patterns demo
-------------------------------------------------------------------------------
- +i alignment on 295 -- 0 1 2 3 16
- *i strides on 295 -- 0 1 2 4 8 16 32
- +i alignment on 590 -- 0 1 2 3 16
- *i strides on 590 -- 0 1 2 4 8 16 32
-------------------------------------------------------------------------------
Lmem access patterns demo
-------------------------------------------------------------------------------
- +i alignment on 590 -- 0 1 2 3 16
- *i strides on 590 -- 0 1 2 4 8 16 32
-------------------------------------------------------------------------------
Transpose lmem access pattern demo
-------------------------------------------------------------------------------
- show code
- try 16, 17 for second array dimension
-------------------------------------------------------------------------------
Transfer demo
-------------------------------------------------------------------------------
- run with missing finish
- ./transpose-soln 8192 10
- show measurement

- show alloc host ptr/map code
- ./transpose-soln 8192 10
- show measurement

- add finish
- show measurement
-> higher BW + overlap! GOOD
-------------------------------------------------------------------------------
GPU prof demo
-------------------------------------------------------------------------------
nvprof --query-events
COMPUTE_PROFILE=1 COMPUTE_PROFILE_CONFIG=...
-------------------------------------------------------------------------------
a glimpse at MPI performance:
-------------------------------------------------------------------------------
- two key figures? latency/bw

BANDWIDTH:
- bandwidth? walk through benchmark, noting benchmarking tricks:
  "loop": run how often
  "skip": skip the warm-up
  "window-size": keep how many non-blocking requests in flight

- run just on box
  as good as 'memcpy'
  very near memory bandwidth! How many extra buffer copies can there be?
  -> point of all this buffer nonsense

  Implementation matters:
  Previous example uses shared memory between processes
  mpiexec --mca btl self,tcp -n 2
  You see the extra buffer copies!

  Now -H box,slate
  -> Networks slow
  -> cardiac,bowery use faster interconnect, I'd encourage you to try this code
     there and compare with our results

  Now bowery
  module load openmpi/intel/1.6
  qsub -l nodes=2 -q interactive -I
BI-BANDWIDTH:
  quick walkthrough
  full-duplex or aggregate bandwidth?

LATENCY:
  quick walkthrough
  on-host
  on-host tcp
  off-host
-------------------------------------------------------------------------------
Spectral partition demo
-------------------------------------------------------------------------------
- re
- python spectral-partitioning.py
- Zoom into DC area
- move epicenter to NY (or so)
- Observe that communication graph may be different

- flip switch
- point out zero eigenvalue, say that we skip it
- show modes
- move epicenter near line
- make it heavier?

- great partitions
- very expensive
- how to compute, if original problem was so big we needed a partition 
  in the first place--that we don't have?
- want more than 2 parts?
-------------------------------------------------------------------------------
metis partition demo
-------------------------------------------------------------------------------
- run
- dial up number of parts
- switch on weights
